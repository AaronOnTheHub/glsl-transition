{
  "name": "glslifyify",
  "version": "0.1.1",
  "description": "A browserify transform stream for glslify",
  "main": "index.js",
  "dependencies": {
    "glsl-deparser": "~0.0.2",
    "glslify": "~0.0.1",
    "glslify-stream": "git://github.com/hughsk/glslify-stream#transformable",
    "stream-combiner": "0.0.2",
    "wrap-stream": "0.0.0",
    "through": "~2.3.4"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/glslifyify.git"
  },
  "keywords": [
    "glsl",
    "module",
    "loading",
    "browserify",
    "transform",
    "system",
    "shader",
    "vertex",
    "fragment"
  ],
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/hughsk/glslifyify/issues"
  },
  "readme": "# glslifyify [![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nA browserify transform stream for\n[Chris Dickinson](http://github.com/chrisdickinson)'s\n[glslify](http://github.com/chrisdickinson/glslify).\n\nWorks just the same, however instead of compiling using a separate\nCLI tool you can just `require('./some-shader.glsl')` and have it\nreturn a bundled shader string.\n\n[![glslifyify](https://nodei.co/npm/glslifyify.png?mini=true)](https://nodei.co/npm/glslifyify)\n\n## Usage ##\n\n``` bash\nbrowserify index.js -t glslifyify > bundle.js\n```\n",
  "readmeFilename": "README.md",
  "_id": "glslifyify@0.1.1",
  "dist": {
    "shasum": "7b7c4b130e925848114fd91e5c7fc04d49d05378"
  },
  "_from": "glslifyify@0.1.1",
  "_resolved": "https://registry.npmjs.org/glslifyify/-/glslifyify-0.1.1.tgz"
}
